# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import server_pb2 as server__pb2


class serverStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.insert = channel.unary_unary(
                '/server.server/insert',
                request_serializer=server__pb2.insertRequest.SerializeToString,
                response_deserializer=server__pb2.insertResponse.FromString,
                )
        self.consult = channel.unary_unary(
                '/server.server/consult',
                request_serializer=server__pb2.consultRequest.SerializeToString,
                response_deserializer=server__pb2.consultResponse.FromString,
                )
        self.activate = channel.unary_unary(
                '/server.server/activate',
                request_serializer=server__pb2.activateRequest.SerializeToString,
                response_deserializer=server__pb2.activateResponse.FromString,
                )
        self.terminate = channel.unary_unary(
                '/server.server/terminate',
                request_serializer=server__pb2.Empty.SerializeToString,
                response_deserializer=server__pb2.terminateResponse.FromString,
                )


class serverServicer(object):
    """Missing associated documentation comment in .proto file."""

    def insert(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def consult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def activate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def terminate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_serverServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'insert': grpc.unary_unary_rpc_method_handler(
                    servicer.insert,
                    request_deserializer=server__pb2.insertRequest.FromString,
                    response_serializer=server__pb2.insertResponse.SerializeToString,
            ),
            'consult': grpc.unary_unary_rpc_method_handler(
                    servicer.consult,
                    request_deserializer=server__pb2.consultRequest.FromString,
                    response_serializer=server__pb2.consultResponse.SerializeToString,
            ),
            'activate': grpc.unary_unary_rpc_method_handler(
                    servicer.activate,
                    request_deserializer=server__pb2.activateRequest.FromString,
                    response_serializer=server__pb2.activateResponse.SerializeToString,
            ),
            'terminate': grpc.unary_unary_rpc_method_handler(
                    servicer.terminate,
                    request_deserializer=server__pb2.Empty.FromString,
                    response_serializer=server__pb2.terminateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'server.server', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class server(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def insert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/server.server/insert',
            server__pb2.insertRequest.SerializeToString,
            server__pb2.insertResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def consult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/server.server/consult',
            server__pb2.consultRequest.SerializeToString,
            server__pb2.consultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def activate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/server.server/activate',
            server__pb2.activateRequest.SerializeToString,
            server__pb2.activateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def terminate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/server.server/terminate',
            server__pb2.Empty.SerializeToString,
            server__pb2.terminateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
